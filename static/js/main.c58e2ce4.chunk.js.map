{"version":3,"sources":["icons/github.tsx","icons/smiley-dead.tsx","icons/smiley-laugh.tsx","icons/smiley-sunglasses.tsx","mine-sweeper.tsx","mine-sweeper-container.tsx","registerServiceWorker.ts","index.tsx","icons/bug.tsx"],"names":["Github","_ref","props","Object","esm_extends","react","assign","width","height","viewBox","d","SmileyDead","SmileyLaugh","SmileySunGlasses","GameStatus","numberColors","0","1","2","3","4","5","6","7","8","Difficulty","MineSweeper","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","timerId","getRandomNumber","num","Math","floor","random","toMineField","x","y","isMine","isFlagged","isRevealed","mineCounter","position","state","mineField","revealCell","field","reduce","acc","val","concat","filter","m","length","clearTimer","setState","gameStatus","VICTORY","revealSurroundingCells","score","PAUSED","rows","columns","mines","generateMineField","_this2","document","addEventListener","e","onKeyDown","_this3","removeEventListener","prevProps","_this$props","objectSpread","GAME_OVER","revealAllMines","_this4","grid","map","row","i","cells","_","j","mine","flagged","revealed","revealedMine","key","className","onClick","onCellClick","onContextMenu","onCellRightClick","onDoubleClick","onCellDoubleClick","flagCounter","counter","counterText","toDisplayNumber","timerText","resetGame","title","RUNNING","displayNumber","String","keyCode","window","clearInterval","numberOfMines","rowIdx","colIdx","_this5","Array","fill","setMineCounters","placeMinesOnField","createEmptyMineField","setInterval","updateTimer","bind","gameOver","preventDefault","toggleFlagged","perimeterReveal","forEach","_this6","getPositionsOfSurroundingCells","pos","_this7","_this8","countSurroundingMines","constructSurroundingCells","_this9","getSurroundingCells","toConsumableArray","React","MineSweeperContainer","arguments","undefined","_this$getDifficultySe","getDifficultySettings","EASY","difficulty","setDifficulty","MEDIUM","HARD","mine_sweeper_MineSweeper","_this$getDifficultySe2","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","href","mine_sweeper_container_MineSweeperContainer","getElementById","oncontextmenu","URL","process","toString","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c58e2ce4.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nexport default function Github({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0 1 12 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z\" />\r\n    </svg>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function SmileyDead({ ...props }: {}) {\r\n  return (\r\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm4 17h-8v-2h8v2zm-.499-6.296l-1.298 1.296-1.203-1.204 1.298-1.296-1.298-1.296 1.203-1.204 1.298 1.296 1.296-1.296 1.203 1.204-1.297 1.296 1.297 1.296-1.202 1.204-1.297-1.296zm-7 0l-1.298 1.296-1.203-1.204 1.298-1.296-1.298-1.296 1.203-1.204 1.298 1.296 1.296-1.296 1.203 1.204-1.297 1.296 1.297 1.296-1.202 1.204-1.297-1.296z\" />\r\n    </svg>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function SmileyLaugh({ ...props }: {}) {\r\n  return (\r\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.507 13.941c-1.512 1.195-3.174 1.931-5.506 1.931-2.334 0-3.996-.736-5.508-1.931l-.493.493c1.127 1.72 3.2 3.566 6.001 3.566 2.8 0 4.872-1.846 5.999-3.566l-.493-.493zm-9.007-5.941c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5-.672-1.5-1.5-1.5zm7 0c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5-.672-1.5-1.5-1.5z\" />\r\n    </svg>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function SmileySunGlasses({ ...props }: {}) {\r\n  return (\r\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 2c3.691 0 6.915 2.016 8.647 5h-17.294c1.732-2.984 4.956-5 8.647-5zm0 20c-5.514 0-10-4.486-10-10 0-1.045.163-2.052.461-3h1.859c.606 1.518 1.929 3 3.986 3 2.477 0 2.153-2.31 3.694-2.31s1.218 2.31 3.695 2.31c2.055 0 3.379-1.482 3.984-3h1.86c.298.948.461 1.955.461 3 0 5.514-4.486 10-10 10zm5.508-8.059l.492.493c-1.127 1.72-3.199 3.566-5.999 3.566-2.801 0-4.874-1.846-6.001-3.566l.492-.493c1.513 1.195 3.174 1.931 5.509 1.931 2.333 0 3.994-.736 5.507-1.931z\" />\r\n    </svg>\r\n  );\r\n}\r\n","import * as React from 'react';\n\nimport SmileyDead from './icons/smiley-dead';\nimport SmileyLaugh from './icons/smiley-laugh';\nimport SmileySunGlasses from './icons/smiley-sunglasses';\n\nconst numberColors = {\n  0: '',\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n};\n\nenum GameStatus {\n  RUNNING,\n  PAUSED,\n  GAME_OVER,\n  VICTORY,\n}\n\ninterface IPosition {\n  x: number;\n  y: number;\n}\n\ninterface IMineSweeperStateProps {\n  gameStatus: GameStatus;\n  score: number;\n  rows: number;\n  columns: number;\n  mines: number;\n  mineField: IMineField[][];\n}\n\ninterface IMineField {\n  isMine: boolean;\n  isRevealed: boolean;\n  isFlagged: boolean;\n  mineCounter: number | null; // If its a mine the counter will be null\n  position: IPosition;\n}\n\ninterface IMineSweeperProps {\n  rows: number;\n  columns: number;\n  mines: number;\n}\n\nexport default class MineSweeper extends React.Component<IMineSweeperProps, IMineSweeperStateProps> {\n  private timerId: number;\n\n  constructor(props: IMineSweeperProps) {\n    super(props);\n    this.state = {\n      score: 0,\n      gameStatus: GameStatus.PAUSED,\n      rows: this.props.rows,\n      columns: this.props.columns,\n      mines: this.props.mines,\n      mineField: this.generateMineField(this.props.rows, this.props.columns, this.props.mines),\n    };\n  }\n\n  public componentDidMount() {\n    document.addEventListener('keydown', (e) => this.onKeyDown(e));\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener('keydown', (e) => this.onKeyDown(e));\n  }\n\n  public componentDidUpdate(prevProps: IMineSweeperProps) {\n    const { rows, columns, mines } = this.props;\n    if (rows !== prevProps.rows || columns !== prevProps.columns || mines !== prevProps.mines) {\n      this.clearTimer();\n      this.setState({\n        ...this.state,\n        rows,\n        columns,\n        mines,\n        score: 0,\n        gameStatus: GameStatus.PAUSED,\n        mineField: this.generateMineField(rows, columns, mines),\n      });\n    }\n  }\n\n  public gameOver() {\n    this.clearTimer();\n    // TODO: Use this.state.score as Highscore\n    this.setState({ gameStatus: GameStatus.GAME_OVER });\n    this.revealAllMines();\n  }\n\n  public render() {\n    const grid = this.state.mineField.map((row: any, i: any) => {\n      const cells = row.map((_: any, j: any) => {\n        const mine = this.state.mineField[i][j];\n        const isRevealed = mine.isRevealed;\n        const isFlagged = mine.isFlagged;\n        const isRevealedMine = mine.isRevealed && mine.isMine;\n        const flagged = isFlagged ? ' flagged' : '';\n        const revealed = isRevealed ? ' revealed' : '';\n        const revealedMine = isRevealedMine ? ' mine' : '';\n        const num = isRevealed && mine.mineCounter ? numberColors[mine.mineCounter] : '';\n        const mineCounter = mine.mineCounter && mine.isRevealed && mine.mineCounter > 0 ? mine.mineCounter : '';\n        return (\n          <div\n            key={`cell-${i}-${j}`}\n            className={`grid-cell${revealed}${revealedMine}${flagged} ${num}`}\n            onClick={() => this.onCellClick(i, j)}\n            onContextMenu={(e) => this.onCellRightClick(e, i, j)}\n            onDoubleClick={(e) => this.onCellDoubleClick(e, i, j)}\n          >\n            {mineCounter}\n          </div>\n        );\n      });\n      return (\n        <div key={`row-${i}`} className=\"grid-row\">\n          {cells}\n        </div>\n      );\n    });\n\n    const flagCounter = this.state.mineField\n      .reduce((acc: IMineField[], val: IMineField[]) => acc.concat(val), [])\n      .filter((m: IMineField) => m.isFlagged && !m.isRevealed).length;\n    const counter = this.props.mines - flagCounter;\n    const counterText = this.toDisplayNumber(counter);\n    const timerText = this.toDisplayNumber(this.state.score);\n\n    return (\n      <div className=\"game-wrapper\">\n        <div className=\"mine-sweeper\">\n          <div className=\"game-state\">\n            <div className=\"counter\">\n              <span>{counterText}</span>\n            </div>\n            <div className=\"game-status\" onClick={() => this.resetGame()} title=\"Reset the game\">\n              {this.state.gameStatus === GameStatus.PAUSED && <SmileyLaugh />}\n              {this.state.gameStatus === GameStatus.RUNNING && <SmileyLaugh />}\n              {this.state.gameStatus === GameStatus.GAME_OVER && <SmileyDead />}\n              {this.state.gameStatus === GameStatus.VICTORY && <SmileySunGlasses />}\n            </div>\n            <div className=\"timer\">\n              <span>{timerText}</span>\n            </div>\n          </div>\n          <div className=\"grid\">{grid}</div>\n        </div>\n      </div>\n    );\n  }\n\n  private toDisplayNumber(num: number) {\n    if (num > 999) {\n      return '999';\n    }\n    let displayNumber = '';\n    if (num < 100) {\n      displayNumber += '0';\n    }\n    if (num < 10) {\n      displayNumber += '0';\n    }\n    return displayNumber.concat(String(num));\n  }\n\n  private onKeyDown(e: any) {\n    if (this.state.gameStatus !== GameStatus.PAUSED && e.keyCode === 82) {\n      this.resetGame();\n    }\n  }\n\n  private clearTimer() {\n    window.clearInterval(this.timerId);\n  }\n\n  private resetGame() {\n    this.clearTimer();\n    this.setState({\n      score: 0,\n      gameStatus: GameStatus.PAUSED,\n      mineField: this.generateMineField(this.props.rows, this.props.columns, this.props.mines),\n    });\n  }\n\n  private placeMinesOnField(mineField: IMineField[][], rows: number, columns: number, numberOfMines: number) {\n    while (numberOfMines > 0) {\n      const rowIdx = this.getRandomNumber(rows);\n      const colIdx = this.getRandomNumber(columns);\n      if (!mineField[rowIdx][colIdx].isMine) {\n        mineField[rowIdx][colIdx].isMine = true;\n        numberOfMines--;\n      }\n    }\n    return mineField;\n  }\n\n  private getRandomNumber = (num: number): number => Math.floor(Math.random() * num);\n\n  private toMineField = (x: number, y: number): IMineField => ({\n    isMine: false,\n    isFlagged: false,\n    isRevealed: false,\n    mineCounter: null, // If its a mine the counter will remain null\n    position: { x, y },\n  });\n\n  private createEmptyMineField(rows: number, columns: number): IMineField[][] {\n    return Array(rows)\n      .fill(0)\n      .map((_, x) =>\n        Array(columns)\n          .fill(0)\n          .map((m, y) => this.toMineField(x, y))\n      );\n  }\n\n  private generateMineField(rows: number, columns: number, mines: number) {\n    return this.setMineCounters(this.placeMinesOnField(this.createEmptyMineField(rows, columns), rows, columns, mines));\n  }\n\n  private updateTimer() {\n    const score = this.state.score + 1;\n    this.setState({\n      score,\n    });\n  }\n\n  private onCellClick(x: number, y: number) {\n    if (this.state.gameStatus === GameStatus.VICTORY || this.state.gameStatus === GameStatus.GAME_OVER) {\n      return;\n    }\n    if (this.state.gameStatus !== GameStatus.RUNNING) {\n      this.setState({\n        gameStatus: GameStatus.RUNNING,\n      });\n      this.timerId = window.setInterval(this.updateTimer.bind(this), 1000);\n    }\n    this.isMine(x, y) ? this.gameOver() : this.revealCell(x, y);\n  }\n\n  private onCellRightClick(e: React.MouseEvent, x: number, y: number) {\n    e.preventDefault();\n    if (this.state.gameStatus === GameStatus.VICTORY || this.state.gameStatus === GameStatus.GAME_OVER) {\n      return;\n    }\n    this.toggleFlagged(x, y);\n  }\n\n  private onCellDoubleClick(e: React.MouseEvent, x: number, y: number) {\n    e.preventDefault();\n    if (this.state.gameStatus === GameStatus.VICTORY || this.state.gameStatus === GameStatus.GAME_OVER) {\n      return;\n    }\n    const mine = this.state.mineField[x][y];\n    if (mine.isRevealed) {\n      this.perimeterReveal(x, y);\n    }\n  }\n\n  private isMine = (x: number, y: number): boolean => this.state.mineField[x][y].isMine;\n\n  private revealAllMines() {\n    const mineField = this.state.mineField;\n    mineField.map((row) =>\n      row.forEach((field) => {\n        if (field.isMine) {\n          field.isRevealed = true;\n          field.isFlagged = false;\n        }\n      })\n    );\n    this.setState({\n      mineField,\n    });\n  }\n\n  private toggleFlagged(x: number, y: number) {\n    const mineField = this.state.mineField;\n    if (!mineField[x][y].isRevealed) {\n      mineField[x][y].isFlagged = !mineField[x][y].isFlagged;\n      this.setState({\n        mineField,\n      });\n    }\n  }\n\n  private revealCell = (x: number, y: number) => {\n    const field = this.state.mineField[x][y];\n    field.isRevealed = true;\n    field.isFlagged = false;\n    const winningCondition =\n      this.state.mineField\n        .reduce((acc: IMineField[], val: IMineField[]) => acc.concat(val), [])\n        .filter((m: IMineField) => !m.isMine && !m.isRevealed).length === 0;\n\n    if (winningCondition) {\n      this.clearTimer();\n      this.setState({\n        gameStatus: GameStatus.VICTORY,\n      });\n    } else {\n      this.setState(\n        {\n          mineField: this.state.mineField,\n        },\n        () => this.revealSurroundingCells(x, y)\n      );\n    }\n  };\n\n  private perimeterReveal(x: number, y: number) {\n    const cellPositions = this.getPositionsOfSurroundingCells(x, y);\n    const surroundingMines = cellPositions\n      .map((pos: IPosition) => this.state.mineField[pos[0]][pos[1]])\n      .filter((mine: IMineField) => !mine.isRevealed && !mine.isFlagged);\n    surroundingMines.forEach((mine: IMineField) => {\n      mine.isMine ? this.gameOver() : this.revealCell(mine.position.x, mine.position.y);\n    });\n  }\n\n  private revealSurroundingCells(x: number, y: number) {\n    if (this.state.mineField[x][y].mineCounter !== 0) {\n      return;\n    }\n    const cellPositions = this.getPositionsOfSurroundingCells(x, y);\n    const surroundingMines = cellPositions\n      .map((pos: Position) => this.state.mineField[pos[0]][pos[1]])\n      .filter((mine: IMineField) => !mine.isRevealed);\n    surroundingMines.forEach((mine: IMineField) => {\n      this.revealCell(mine.position.x, mine.position.y);\n    });\n  }\n\n  private getSurroundingCells(x: number, y: number) {\n    return [\n      [x - 1, y - 1],\n      [x, y - 1],\n      [x + 1, y - 1],\n      [x - 1, y],\n      [x + 1, y],\n      [x - 1, y + 1],\n      [x, y + 1],\n      [x + 1, y + 1],\n    ];\n  }\n\n  private setMineCounters(mineField: IMineField[][]): IMineField[][] {\n    return mineField.map((row, x) =>\n      row.map((field, y) => {\n        return field.isMine\n          ? field\n          : {\n              ...field,\n              mineCounter: this.countSurroundingMines(x, y, mineField),\n            };\n      })\n    );\n  }\n\n  private countSurroundingMines(x: number, y: number, mineField: IMineField[][]): number {\n    let counter = 0;\n    const surroundingCells = this.constructSurroundingCells(x, y);\n    surroundingCells.forEach((pos: number[]) => {\n      if (mineField[pos[0]][pos[1]].isMine) {\n        counter++;\n      }\n    });\n    return counter;\n  }\n\n  private constructSurroundingCells(x: number, y: number) {\n    return this.getSurroundingCells(x, y).reduce(\n      (acc: any, val) =>\n        val[0] < 0\n          ? acc\n          : val[1] < 0\n          ? acc\n          : val[0] >= this.props.rows\n          ? acc\n          : val[1] >= this.props.columns\n          ? acc\n          : [...acc, val],\n      []\n    );\n  }\n\n  private getPositionsOfSurroundingCells(x: number, y: number) {\n    return this.constructSurroundingCells(x, y);\n  }\n}\n","import * as React from 'react';\r\n\r\nimport MineSweeper from './mine-sweeper';\r\n\r\ninterface IMineSweeperContainerStateProps {\r\n  rows: number;\r\n  columns: number;\r\n  mines: number;\r\n  difficulty: Difficulty;\r\n}\r\n\r\nenum Difficulty {\r\n  EASY,\r\n  MEDIUM,\r\n  HARD,\r\n}\r\n\r\nexport default class MineSweeperContainer extends React.Component<{}, IMineSweeperContainerStateProps> {\r\n  constructor(props = {}) {\r\n    super(props);\r\n    const { rows, columns, mines } = this.getDifficultySettings(Difficulty.EASY);\r\n    this.state = {\r\n      difficulty: Difficulty.EASY,\r\n      rows,\r\n      columns,\r\n      mines,\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"header\">\r\n          <h1>Minesweeper</h1>\r\n          <div className=\"instructions\">\r\n            <span>\r\n              To flag cells use <span className=\"hotkey\">right click</span>.\r\n            </span>\r\n            <span>\r\n              To perimeter check already revealed cells use <span className=\"hotkey\">double click</span>.\r\n            </span>\r\n            <span>\r\n              To reset the game press the <span className=\"hotkey\">R</span> key or the{' '}\r\n              <span className=\"hotkey\">smiley</span> button.\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"difficulty\">\r\n          <h3>Difficulty</h3>\r\n          <div className=\"difficulty-container\">\r\n            <span\r\n              className={this.state.difficulty === Difficulty.EASY ? 'active' : ''}\r\n              onClick={() => this.setDifficulty(Difficulty.EASY)}\r\n            >\r\n              Easy\r\n              <div className=\"difficulty-mine-container\">\r\n                <i className=\"difficulty-mine\" />\r\n              </div>\r\n            </span>\r\n            <span\r\n              className={this.state.difficulty === Difficulty.MEDIUM ? 'active' : ''}\r\n              onClick={() => this.setDifficulty(Difficulty.MEDIUM)}\r\n            >\r\n              Medium\r\n              <div className=\"difficulty-mine-container\">\r\n                <i className=\"difficulty-mine\" />\r\n                <i className=\"difficulty-mine\" />\r\n              </div>\r\n            </span>\r\n            <span\r\n              className={this.state.difficulty === Difficulty.HARD ? 'active' : ''}\r\n              onClick={() => this.setDifficulty(Difficulty.HARD)}\r\n            >\r\n              Hard\r\n              <div className=\"difficulty-mine-container\">\r\n                <i className=\"difficulty-mine\" />\r\n                <i className=\"difficulty-mine\" />\r\n                <i className=\"difficulty-mine\" />\r\n              </div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <MineSweeper rows={this.state.rows} columns={this.state.columns} mines={this.state.mines} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private getDifficultySettings(difficulty: Difficulty): { rows: number; columns: number; mines: number } {\r\n    return {\r\n      0: { rows: 8, columns: 8, mines: 10 },\r\n      1: { rows: 16, columns: 16, mines: 40 },\r\n      2: { rows: 16, columns: 30, mines: 99 },\r\n    }[difficulty];\r\n  }\r\n\r\n  private setDifficulty(difficulty: Difficulty) {\r\n    const { rows, columns, mines } = this.getDifficultySettings(difficulty);\r\n\r\n    this.setState({\r\n      difficulty,\r\n      rows,\r\n      columns,\r\n      mines,\r\n    });\r\n  }\r\n}\r\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString());\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport Bug from './icons/bug';\nimport Github from './icons/github';\nimport MineSweeperContainer from './mine-sweeper-container';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <a href=\"https://github.com/Knochenmark/minesweeper/issues\" title=\"Report a bug\" className=\"bug\">\n      <Bug />\n    </a>\n    <div className=\"github-container\">\n      <a href=\"https://github.com/Knochenmark\" title=\"Find me on Github\" className=\"github\">\n        <Github />\n        Knochenmark\n      </a>\n      <a href=\"https://github.com/Psyperl\" title=\"Find me on Github\" className=\"github\">\n        <Github />\n        Psyperl\n      </a>\n    </div>\n    <MineSweeperContainer />\n  </React.Fragment>,\n  document.getElementById('root') as HTMLElement\n);\n\ndocument.oncontextmenu = () => false;\nregisterServiceWorker();\n","import * as React from 'react';\r\n\r\nexport default function Bug({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M7.074 1.408A1.42 1.42 0 0 1 8.505 0c.942 0 1.626.883 1.38 1.776-.093.336-.042.695.138.995.401.664 1.084 1.073 1.977 1.078.88-.004 1.572-.408 1.977-1.078.181-.299.231-.658.138-.995C13.869.884 14.551 0 15.495 0c.79 0 1.431.63 1.431 1.408 0 .675-.482 1.234-1.118 1.375a1.2 1.2 0 0 0-.769.548c-.613 1.017.193 1.917.93 2.823C14.759 6.716 13.445 7 12 7c-1.468 0-2.771-.277-3.975-.84.748-.92 1.555-1.803.935-2.83a1.195 1.195 0 0 0-.768-.548 1.414 1.414 0 0 1-1.118-1.374zM12 11c-1.724 0-3.355-.296-4.872-.882C5.805 13.05 5.849 21.091 12 21.984c6.085-.886 6.232-8.764 4.859-11.871A13.39 13.39 0 0 1 12 11zm6.319-2.314c.14.319.394.454.648.454.39 0 2.462-1.016 2.958-1.016.42 0 .817.249.98.657a1.034 1.034 0 0 1-.594 1.346l-2.231.866c-.479.186-.857.655-.765 1.333.09.659.652 1.052 1.227 1.052h2.402c.583 0 1.054.464 1.054 1.037s-.472 1.037-1.054 1.037h-2.387c-.558 0-1.147.332-1.277 1.136-.104.645.269 1.162.763 1.383l2.42 1.078c.53.236.766.851.526 1.373a1.062 1.062 0 0 1-1.395.518l-2.561-1.14c-.341-.152-.706-.062-.963.364A8.137 8.137 0 0 1 12 24a8.137 8.137 0 0 1-6.135-3.943c-.2-.342-.564-.409-.901-.259l-2.561 1.14a1.061 1.061 0 0 1-1.395-.518 1.031 1.031 0 0 1 .526-1.373l2.42-1.078c.523-.233.863-.734.751-1.462-.106-.685-.692-1.057-1.265-1.057H1.054C.472 15.452 0 14.988 0 14.415s.472-1.037 1.054-1.037h2.402c.552 0 1.129-.353 1.235-1.111.082-.58-.277-1.082-.773-1.274l-2.231-.866a1.033 1.033 0 0 1-.594-1.346c.212-.53.823-.796 1.367-.584.232.09 2.332.944 2.573.944.242 0 .501-.125.663-.491.18-.408.384-.787.601-1.146C8.005 8.502 9.887 9 12 9c2.08 0 3.986-.51 5.699-1.502.225.372.435.765.62 1.188z\" />\r\n    </svg>\r\n  );\r\n}\r\n"],"sourceRoot":""}